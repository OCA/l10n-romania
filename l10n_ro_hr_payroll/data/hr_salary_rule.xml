<?xml version="1.0" ?>
<openerp>
	<data>
		
		
		
<!-- HR SALARY RULES-->		
		<record id="salarrealizat" model="hr.salary.rule">
			<field name="code">REAL</field>
			<field name="name">SALAR REALIZAT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.salarrealizat_categ"/>
			<field eval="1" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">
result = round(contract.wage / payslip.working_days * worked_days.WORK100.number_of_days)</field>
		</record>
		
		<record id="concediuodihna" model="hr.salary.rule">
			<field name="code">OD</field>
			<field name="name">CONCEDIU ODIHNA</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.concedii_categ"/>
			<field eval="10" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = 0
if worked_days.LL : result += round(worked_days.LL.number_of_days * worked_days.LL.daily_base)</field>
		</record>
		
		<record id="concediimedicale0" model="hr.salary.rule">
			<field name="code">MEDA</field>
			<field name="name">CONCEDII MEDICALE - A</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.concediimedicale_catega"/>
			<field eval="21" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = 0
if worked_days.SL01 : result += worked_days.SL01.employer_days * worked_days.SL01.daily_base
if worked_days.SL02 : result += worked_days.SL02.employer_days * worked_days.SL02.daily_base
if worked_days.SL03 : result += worked_days.SL03.employer_days * worked_days.SL03.daily_base
if worked_days.SL04 : result += worked_days.SL04.employer_days * worked_days.SL04.daily_base
if worked_days.SL05 : result += worked_days.SL05.employer_days * worked_days.SL05.daily_base
if worked_days.SL06 : result += worked_days.SL06.employer_days * worked_days.SL06.daily_base
if worked_days.SL11 : result += worked_days.SL11.employer_days * worked_days.SL11.daily_base
if worked_days.SL12 : result += worked_days.SL12.employer_days * worked_days.SL12.daily_base
if worked_days.SL13 : result += worked_days.SL13.employer_days * worked_days.SL13.daily_base
if worked_days.SL14 : result += worked_days.SL14.employer_days * worked_days.SL14.daily_base</field>
		</record>
		<record id="concediimedicale1" model="hr.salary.rule">
			<field name="code">MEDB</field>
			<field name="name">CONCEDII MEDICALE - B</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.concediimedicale_categb"/>
			<field eval="22" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = 0
if worked_days.SL01 : result += worked_days.SL01.budget_days * worked_days.SL01.daily_base
if worked_days.SL05 : result += worked_days.SL05.budget_days * worked_days.SL05.daily_base
if worked_days.SL06 : result += worked_days.SL06.budget_days * worked_days.SL06.daily_base
if worked_days.SL07 : result += worked_days.SL07.budget_days * worked_days.SL07.daily_base
if worked_days.SL08 : result += worked_days.SL08.budget_days * worked_days.SL08.daily_base
if worked_days.SL09 : result += worked_days.SL09.budget_days * worked_days.SL09.daily_base
if worked_days.SL10 : result += worked_days.SL10.budget_days * worked_days.SL10.daily_base
if worked_days.SL12 : result += worked_days.SL12.budget_days * worked_days.SL12.daily_base
if worked_days.SL13 : result += worked_days.SL13.budget_days * worked_days.SL13.daily_base
if worked_days.SL14 : result += worked_days.SL14.budget_days * worked_days.SL14.daily_base
if worked_days.SL15 : result += worked_days.SL15.budget_days * worked_days.SL15.daily_base</field>
		</record>
		<record id="concediimedicale2" model="hr.salary.rule">
			<field name="code">MEDC</field>
			<field name="name">CONCEDII MEDICALE - C</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.concediimedicale_categc"/>
			<field eval="23" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = 0
if worked_days.SL02 : result += worked_days.SL02.budget_days * worked_days.SL02.daily_base
if worked_days.SL03 : result += worked_days.SL03.budget_days * worked_days.SL03.daily_base
if worked_days.SL04 : result += worked_days.SL04.budget_days * worked_days.SL04.daily_base
if worked_days.SL11 : result += worked_days.SL011.budget_days * worked_days.SL011.daily_base</field>
		</record>
		<record id="concediimedicale3" model="hr.salary.rule">
			<field name="code">MED</field>
			<field name="name">CONCEDII MEDICALE</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.concediimedicale_categ"/>
			<field eval="25" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(categories.MEDA + categories.MEDB + categories.MEDC)</field>
		</record>
		<record id="premii" model="hr.salary.rule">
			<field name="code">PREM</field>
			<field name="name">PREMII</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.premiiregularizari_categ"/>
			<field eval="30" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">percentage</field>
			<field name="amount_percentage_base">inputs.PREM.amount</field>
			<field name="amount_percentage">100.00</field>
		</record>
		<record id="hr_rule_input_premii" model="hr.rule.input">
			<field name="code">PREM</field>
			<field name="input_id" ref="premii"/>
			<field name="name">PREMII</field>
		</record>
		<record id="tichetedemasa" model="hr.salary.rule">
			<field name="code">TIC</field>
			<field name="name">TICHETE DE MASA</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.tichetedemasa_categ"/>
			<field eval="40" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(worked_days.WORK100.number_of_days * employee.company_id.get_meal_voucher_value(payslip.date_from))</field>
            <field name="register_id" ref="ro_contribution_register_meal_voucher"/>
		</record>
		<record id="venit_brut" model="hr.salary.rule">
			<field name="code">BRUT</field>
			<field name="name">BRUT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.brut_categ"/>
			<field eval="50" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(categories.VBRUT)</field>
		</record>
		
		<record id="somaj0" model="hr.salary.rule">
			<field name="code">SOMAJA</field>
			<field name="name">SOMAJ ANGAJAT - BRUT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.somajangajat_categ"/>
			<field eval="101" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">percentage</field>
			<field name="amount_percentage_base">categories.VBRUT - categories.MED - categories.TIC</field>
			<field name="amount_percentage">0.5</field>
		</record>
		<record id="somaj1" model="hr.salary.rule">
			<field name="code">SOMAJB</field>
			<field name="name">SOMAJ ANGAJAT - MEDICAL</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.somajangajat_categ"/>
			<field eval="102" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">percentage</field>
			<field name="amount_percentage_base">round(categories.MEDA)</field>
			<field name="amount_percentage">0.5</field>
		</record>
		<record id="somaj2" model="hr.salary.rule">
			<field name="code">SOMAJ</field>
			<field name="name">SOMAJ ANGAJAT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.contributiiangajat_categ"/>
			<field eval="105" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(categories.ANG_SOMAJ)</field>
			<field name="register_id" ref="ro_contribution_register_som"/>
		</record>
		<record id="somaj_ang0" model="hr.salary.rule">
			<field name="code">SOMAJ1A</field>
			<field name="name">SOMAJ ANGAJATOR - BRUT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.somajangajator_categ"/>
			<field eval="501" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">percentage</field>
			<field name="amount_percentage_base">categories.VBRUT - categories.MED - categories.TIC</field>
			<field name="amount_percentage">0.5</field>
		</record>
		<record id="somaj_ang1" model="hr.salary.rule">
			<field name="code">SOMAJ1B</field>
			<field name="name">SOMAJ ANGAJATOR - MEDICAL</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.somajangajator_categ"/>
			<field eval="502" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">percentage</field>
			<field name="amount_percentage_base">categories.MEDA</field>
			<field name="amount_percentage">0.5</field>
		</record>
		<record id="somaj_ang2" model="hr.salary.rule">
			<field name="code">SOMAJ1</field>
			<field name="name">SOMAJ ANGAJATOR</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.contributiiangajator_categ"/>
			<field eval="505" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>			
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(categories.COMP_SOMAJ)</field>
			<field name="register_id" ref="ro_contribution_register_ang_som"/>
		</record>
		<record id="cass0" model="hr.salary.rule">
			<field name="code">CASSA</field>
			<field name="name">CASS ANGAJAT - BRUT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.cassangajat_categ"/>
			<field eval="111" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">percentage</field>
			<field name="amount_percentage_base">categories.VBRUT - categories.MED - categories.TIC</field>
			<field name="amount_percentage">5.50</field>
		</record>
		<record id="cass1" model="hr.salary.rule">
			<field name="code">CASSB</field>
			<field name="name">CASS ANGAJAT - MEDICAL</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.cassangajat_categ"/>
			<field eval="112" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = 0
if worked_days.SL02 : result += worked_days.SL02.employer_days * worked_days.SL02.daily_base * 0.055
if worked_days.SL03 : result += worked_days.SL03.employer_days * worked_days.SL03.daily_base * 0.055
if worked_days.SL04 : result += worked_days.SL04.employer_days * worked_days.SL04.daily_base * 0.055
if worked_days.SL11 : result += worked_days.SL011.employer_days * worked_days.SL011.daily_base * 0.055
            </field>
		</record>
		<record id="cass2" model="hr.salary.rule">
			<field name="code">CASS</field>
			<field name="name">CASS ANGAJAT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.contributiiangajat_categ"/>
			<field eval="115" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>			
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(categories.ANG_CASS)</field>
			<field name="register_id" ref="ro_contribution_register_cass"/>
		</record>
		<record id="cass_ang0" model="hr.salary.rule">
			<field name="code">CASS1A</field>
			<field name="name">CASS ANGAJATOR - BRUT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.cassangajator_categ"/>
			<field eval="511" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">percentage</field>
			<field name="amount_percentage_base">categories.VBRUT - categories.MED - categories.TIC</field>
			<field name="amount_percentage">5.20</field>
		</record>
		<record id="cass_ang1" model="hr.salary.rule">
			<field name="code">CASS1B</field>
			<field name="name">CASS ANGAJATOR - MEDICAL</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.cassangajator_categ"/>
			<field eval="512" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = 0
if worked_days.SL01 : result += worked_days.SL01.employer_days * worked_days.SL01.daily_base * 0.052
if worked_days.SL02 : result += worked_days.SL02.employer_days * worked_days.SL02.daily_base * 0.052
if worked_days.SL03 : result += worked_days.SL03.employer_days * worked_days.SL03.daily_base * 0.052
if worked_days.SL04 : result += worked_days.SL04.employer_days * worked_days.SL04.daily_base * 0.052
if worked_days.SL05 : result += worked_days.SL05.employer_days * worked_days.SL05.daily_base * 0.052
if worked_days.SL06 : result += worked_days.SL06.employer_days * worked_days.SL06.daily_base * 0.052
if worked_days.SL11 : result += worked_days.SL11.employer_days * worked_days.SL11.daily_base * 0.052
if worked_days.SL12 : result += worked_days.SL12.employer_days * worked_days.SL12.daily_base * 0.052
if worked_days.SL13 : result += worked_days.SL13.employer_days * worked_days.SL13.daily_base * 0.052
if worked_days.SL14 : result += worked_days.SL14.employer_days * worked_days.SL14.daily_base * 0.052</field>
		</record>
		<record id="cass_ang2" model="hr.salary.rule">
			<field name="code">CASS1</field>
			<field name="name">CASS ANGAJATOR</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.contributiiangajator_categ"/>
			<field eval="515" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>			
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(categories.COMP_CASS)</field>
			<field name="register_id" ref="ro_contribution_register_ang_cass"/>
		</record>
		<record id="cas0" model="hr.salary.rule">
			<field name="code">CASA</field>
			<field name="name">CAS ANGAJAT - BRUT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.casangajat_categ"/>
			<field eval="121" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">percentage</field>
			<field name="amount_percentage_base">categories.VBRUT - categories.MED - categories.TIC</field>
			<field name="amount_percentage">10.50</field>
		</record>
		<record id="cas1" model="hr.salary.rule">
			<field name="code">CASB</field>
			<field name="name">CAS ANGAJAT - MEDICAL1</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.casangajat_categ"/>
			<field eval="122" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = 0
if worked_days.SL01 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL01.employer_days / payslip.working_days
if worked_days.SL05 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL05.employer_days / payslip.working_days
if worked_days.SL06 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL06.employer_days / payslip.working_days
if worked_days.SL12 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL12.employer_days / payslip.working_days
if worked_days.SL13 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL13.employer_days / payslip.working_days
if worked_days.SL14 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL14.employer_days / payslip.working_days</field>
		</record>
		<record id="cas2" model="hr.salary.rule">
			<field name="code">CASC</field>
			<field name="name">CAS ANGAJAT - MEDICAL2</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.casangajat_categ"/>
			<field eval="123" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = 0
if worked_days.SL01 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL01.budget_days / payslip.working_days
if worked_days.SL05 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL05.budget_days / payslip.working_days
if worked_days.SL06 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL06.budget_days / payslip.working_days
if worked_days.SL07 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL07.budget_days / payslip.working_days
if worked_days.SL08 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL08.budget_days / payslip.working_days
if worked_days.SL09 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL09.budget_days / payslip.working_days
if worked_days.SL10 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL10.budget_days / payslip.working_days
if worked_days.SL12 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL12.budget_days / payslip.working_days
if worked_days.SL13 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL13.budget_days / payslip.working_days
if worked_days.SL14 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL14.budget_days / payslip.working_days
if worked_days.SL15 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * 0.105 * worked_days.SL15.budget_days / payslip.working_days</field>
		</record>
		<record id="cas3" model="hr.salary.rule">
			<field name="code">CAS</field>
			<field name="name">CAS ANGAJAT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.contributiiangajat_categ"/>
			<field eval="125" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>			
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(categories.ANG_CAS)</field>
			<field name="register_id" ref="ro_contribution_register_cas"/>
		</record>
		<record id="cas_ang0" model="hr.salary.rule">
			<field name="code">CAS1A</field>
			<field name="name">CAS ANGAJATOR - BRUT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.casangajator_categ"/>
			<field eval="521" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">if contract.work_type =="1": perc=0.158
if contract.work_type =="2": perc=0.208
if contract.work_type =="3": perc=0.258
result = 0
result = (categories.VBRUT - categories.MED - categories.TIC) * perc</field>
		</record>
		<record id="cas_ang1" model="hr.salary.rule">
			<field name="code">CAS1B</field>
			<field name="name">CAS ANGAJATOR - MEDICAL1</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.casangajator_categ"/>
			<field eval="522" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">if contract.work_type =="1": perc=0.158
if contract.work_type =="2": perc=0.208
if contract.work_type =="3": perc=0.258
result = 0
if worked_days.SL01 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL01.employer_days / payslip.working_days
if worked_days.SL05 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL05.employer_days / payslip.working_days
if worked_days.SL06 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL06.employer_days / payslip.working_days
if worked_days.SL12 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL12.employer_days / payslip.working_days
if worked_days.SL13 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL13.employer_days / payslip.working_days
if worked_days.SL14 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL14.employer_days / payslip.working_days</field>
		</record>
		<record id="cas_ang2" model="hr.salary.rule">
			<field name="code">CAS1C</field>
			<field name="name">CAS ANGAJATOR - MEDICAL2</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.casangajator_categ"/>
			<field eval="523" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">if contract.work_type =="1": perc=0.158
if contract.work_type =="2": perc=0.208
if contract.work_type =="3": perc=0.258
result = 0
if worked_days.SL01 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL01.budget_days / payslip.working_days
if worked_days.SL05 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL05.budget_days / payslip.working_days
if worked_days.SL06 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL06.budget_days / payslip.working_days
if worked_days.SL07 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL07.budget_days / payslip.working_days
if worked_days.SL08 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL08.budget_days / payslip.working_days
if worked_days.SL09 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL09.budget_days / payslip.working_days
if worked_days.SL10 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL10.budget_days / payslip.working_days
if worked_days.SL12 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL12.budget_days / payslip.working_days
if worked_days.SL13 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL13.budget_days / payslip.working_days
if worked_days.SL14 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL14.budget_days / payslip.working_days
if worked_days.SL15 : result += employee.company_id.get_medium_wage(payslip.date_from) * 0.35 * perc * worked_days.SL15.budget_days / payslip.working_days</field>
		</record>
		<record id="cas_ang3" model="hr.salary.rule">
			<field name="code">CAS1</field>
			<field name="name">CAS ANGAJATOR</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.contributiiangajator_categ"/>
			<field eval="525" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(categories.COMP_CAS)</field>
			<field name="register_id" ref="ro_contribution_register_ang_cas"/>
		</record>
		<record id="fondconcediideboala0" model="hr.salary.rule">
			<field name="code">FCONA</field>
			<field name="name">FOND CONCEDII DE BOALA - BRUT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.fondconcediimedicale_categ"/>
			<field eval="531" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">percentage</field>
			<field name="amount_percentage_base">categories.VBRUT - categories.MED - categories.TIC</field>
			<field name="amount_percentage">0.85</field>
		</record>
		<record id="fondconcediideboala1" model="hr.salary.rule">
			<field name="code">FCONB</field>
			<field name="name">FOND CONCEDII DE BOALA - MEDICAL1</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.fondconcediimedicale_categ"/>
			<field eval="532" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = 0
if worked_days.SL01: result += worked_days.SL01.employer_days * worked_days.SL01.daily_base * 0.0085
if worked_days.SL02: result += worked_days.SL02.employer_days * worked_days.SL02.daily_base * 0.0085
if worked_days.SL03: result += worked_days.SL03.employer_days * worked_days.SL03.daily_base * 0.0085
if worked_days.SL04: result += worked_days.SL04.employer_days * worked_days.SL04.daily_base * 0.0085
if worked_days.SL05: result += worked_days.SL05.employer_days * worked_days.SL05.daily_base * 0.0085
if worked_days.SL06: result += worked_days.SL06.employer_days * worked_days.SL06.daily_base * 0.0085
if worked_days.SL11: result += worked_days.SL11.employer_days * worked_days.SL11.daily_base * 0.0085
if worked_days.SL12: result += worked_days.SL12.employer_days * worked_days.SL12.daily_base * 0.0085
if worked_days.SL13: result += worked_days.SL13.employer_days * worked_days.SL13.daily_base * 0.0085
if worked_days.SL14: result += worked_days.SL14.employer_days * worked_days.SL14.daily_base * 0.0085</field>
		</record>
		<record id="fondconcediideboala2" model="hr.salary.rule">
			<field name="code">FCONC</field>
			<field name="name">FOND CONCEDII DE BOALA - MEDICAL2</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.fondconcediimedicale_categ"/>
			<field eval="533" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = 0
if worked_days.SL02: result += worked_days.SL02.budget_days * worked_days.SL02.daily_base * 0.0085
if worked_days.SL03: result += worked_days.SL03.budget_days * worked_days.SL03.daily_base * 0.0085
if worked_days.SL04: result += worked_days.SL04.budget_days * worked_days.SL04.daily_base * 0.0085
if worked_days.SL11: result += worked_days.SL11.budget_days * worked_days.SL11.daily_base * 0.0085</field>
		</record>
		<record id="fondconcediideboala3" model="hr.salary.rule">
			<field name="code">FCON</field>
			<field name="name">FOND CONCEDII DE BOALA</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.contributiiangajator_categ"/>
			<field eval="535" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(categories.COMP_FCON)</field>
			<field name="register_id" ref="ro_contribution_register_ang_fond_conc"/>
		</record>
		<record id="fondriscaccidente0" model="hr.salary.rule">
			<field name="code">FACC1A</field>
			<field name="name">FOND RISC ACCIDENTE - BRUT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.fondaccidente_categ"/>
			<field eval="541" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = (categories.VBRUT - categories.MED - categories.TIC) * employee.company_id.risk_rate / 100</field>
			<field name="quantity">1.0</field>
		</record>
		<record id="fondriscaccidente1" model="hr.salary.rule">
			<field name="code">FACC1B</field>
			<field name="name">FOND RISC ACCIDENTE - MEDICAL1</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.fondaccidente_categ"/>
			<field eval="542" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = 0
if worked_days.SL01 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL01.employer_days
if worked_days.SL05 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL05.employer_days
if worked_days.SL06 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL06.employer_days
if worked_days.SL07 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL07.employer_days
if worked_days.SL08 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL08.employer_days
if worked_days.SL09 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL09.employer_days
if worked_days.SL10 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL10.employer_days
if worked_days.SL12 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL12.employer_days
if worked_days.SL13 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL13.employer_days
if worked_days.SL14 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL14.employer_days</field>
		</record>
		<record id="fondriscaccidente2" model="hr.salary.rule">
			<field name="code">FACC1C</field>
			<field name="name">FOND RISC ACCIDENTE - MEDICAL2</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.fondaccidente_categ"/>
			<field eval="543" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = 0
if worked_days.SL01 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL01.budget_days
if worked_days.SL05 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL05.budget_days
if worked_days.SL06 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL06.budget_days
if worked_days.SL07 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL07.budget_days
if worked_days.SL08 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL08.budget_days
if worked_days.SL09 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL09.budget_days
if worked_days.SL10 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL10.budget_days
if worked_days.SL12 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL12.budget_days
if worked_days.SL13 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL13.budget_days
if worked_days.SL14 : result += employee.company_id.get_minimum_wage(payslip.date_from) * employee.company_id.risk_rate / 100 / payslip.working_days * worked_days.SL14.budget_days</field>
		</record>
		<record id="fondriscaccidente3" model="hr.salary.rule">
			<field name="code">FACC1</field>
			<field name="name">FOND RISC ACCIDENTE</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.contributiiangajator_categ"/>			
			<field eval="545" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(categories.COMP_FACC)</field>
			<field name="register_id" ref="ro_contribution_register_ang_fond_risc"/>
		</record>
		<record id="fondgarantaresalarii0" model="hr.salary.rule">
			<field name="code">FSALA</field>
			<field name="name">FOND GARANTARE SALARII - BRUT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.fondgarantaresalarii_categ"/>
			<field eval="551" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">percentage</field>
			<field name="amount_percentage_base">categories.VBRUT - categories.MED - categories.TIC</field>
			<field name="amount_percentage">0.25</field>
		</record>
		<record id="fondgarantaresalarii1" model="hr.salary.rule">
			<field name="code">FSALB</field>
			<field name="name">FOND GARANTARE SALARII - MEDICAL</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.fondgarantaresalarii_categ"/>
			<field eval="552" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = 0
if worked_days.SL01 : result += worked_days.SL01.employer_amount * 0.0025
if worked_days.SL02 : result += worked_days.SL02.employer_amount * 0.0025
if worked_days.SL03 : result += worked_days.SL03.employer_amount * 0.0025
if worked_days.SL04 : result += worked_days.SL04.employer_amount * 0.0025
if worked_days.SL05 : result += worked_days.SL05.employer_amount * 0.0025
if worked_days.SL06 : result += worked_days.SL06.employer_amount * 0.0025
if worked_days.SL11 : result += worked_days.SL11.employer_amount * 0.0025
if worked_days.SL12 : result += worked_days.SL12.employer_amount * 0.0025
if worked_days.SL13 : result += worked_days.SL13.employer_amount * 0.0025
if worked_days.SL14 : result += worked_days.SL14.employer_amount * 0.0025</field>
		</record>
		<record id="fondgarantaresalarii2" model="hr.salary.rule">
			<field name="code">FSAL1</field>
			<field name="name">FOND GARANTARE SALARII</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.contributiiangajator_categ"/>
			<field eval="555" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(categories.COMP_FSAL)</field>
			<field name="register_id" ref="ro_contribution_register_ang_fond_garant"/>
		</record>
		<record id="contributiiangajat" model="hr.salary.rule">
			<field name="code">ANG</field>
			<field name="name">CONTRIBUTII ANGAJAT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.contributiiangajat_categ1"/>
			<field eval="130" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(categories.ANG_SOMAJ + categories.ANG_CASS + categories.ANG_CAS)</field>
		</record>
		<record id="contributiiangajator" model="hr.salary.rule">
			<field name="code">COMP</field>
			<field name="name">CONTRIBUTII ANGAJATOR</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.contributiiangajator_categ1"/>
			<field eval="560" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(categories.COMP_SOMAJ + categories.COMP_CASS + categories.COMP_CAS + categories.COMP_FACC + categories.COMP_FSAL)</field>
		</record>
		<record id="deducerebaza" model="hr.salary.rule">
			<field name="code">DED</field>
			<field name="name">DEDUCERE BAZA</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.deducerebaza_categ"/>
			<field eval="140" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">if categories.VBRUT &gt; 3000 : result = 0
if ((employee.person_in_care == 0) and (categories.VBRUT &lt;= 1500)) : result = 300
if ((employee.person_in_care == 1) and (categories.VBRUT &lt;= 1500)) : result = 400
if ((employee.person_in_care == 2) and (categories.VBRUT &lt;= 1500)) : result = 500
if ((employee.person_in_care == 3) and (categories.VBRUT &lt;= 1500)) : result = 600
if ((employee.person_in_care == 4) and (categories.VBRUT &lt;= 1500)) : result = 800
if ((employee.person_in_care == 0) and (categories.VBRUT &gt; 1500) and (categories.VBRUT &lt; 3000)) : result = round((300 * (1 - (categories.VBRUT - 1500) / 1500) + 5),-1)
if ((employee.person_in_care == 1) and (categories.VBRUT &gt; 1500) and (categories.VBRUT &lt; 3000)) : result = round((400 * (1 - (categories.VBRUT - 1500) / 1500) + 5),-1)
if ((employee.person_in_care == 2) and (categories.VBRUT &gt; 1500) and (categories.VBRUT &lt; 3000)) : result = round((500 * (1 - (categories.VBRUT - 1500) / 1500) + 5),-1)
if ((employee.person_in_care == 3) and (categories.VBRUT &gt; 1500) and (categories.VBRUT &lt; 3000)) : result = round((600 * (1 - (categories.VBRUT - 1500) / 1500) + 5),-1)
if ((employee.person_in_care >= 4) and (categories.VBRUT &gt; 1500) and (categories.VBRUT &lt; 3000)) : result = round((800 * (1 - (categories.VBRUT - 1500) / 1500) + 5),-1)</field>
		</record>
		
		<record id="bazacalculimpozit" model="hr.salary.rule">
			<field name="code">IMPZ</field>
			<field name="name">BAZA IMPOZITARE</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.venitimpozabil_categ"/>
			<field eval="150" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">percentage</field>
			<field name="amount_percentage_base">categories.VBRUT - categories.ANG_ALL - categories.DED - categories.DEDS</field>
			<field name="amount_percentage">100.00</field>
		</record>
		<record id="impozit" model="hr.salary.rule">
			<field name="code">IMP</field>
			<field name="name">IMPOZIT</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.impozit_categ"/>
			<field eval="160" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result = round(IMPZ * 0.16)</field>
			<field name="register_id" ref="ro_contribution_register_imp_sal"/>
		</record>
		<record id="salarnet" model="hr.salary.rule">
			<field name="code">NET1</field>
			<field name="name">SALAR NET</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.salarnet_categ"/>
			<field eval="170" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">percentage</field>
			<field name="amount_percentage_base">round(categories.VBRUT - categories.ANG_ALL - categories.IMP)</field>
			<field name="amount_percentage">100.00</field>
		</record>
		<record id="retineri" model="hr.salary.rule">
			<field name="code">RET</field>
			<field name="name">RETINERI</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.retineri_categ"/>
			<field eval="180" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">code</field>
			<field name="amount_python_compute">result =  inputs.RETINERI.amount</field>
		</record>
		<record id="input_alteretineri" model="hr.rule.input">
			<field name="code">RETINERI</field>
			<field name="input_id" ref="retineri"/>
			<field name="name">RETINERI</field>
		</record>
		<record id="restplata" model="hr.salary.rule">
			<field name="code">REST</field>
			<field name="name">REST PLATA</field>
			<field name="category_id" ref="l10n_ro_hr_payroll.restplata_categ"/>
			<field eval="210" name="sequence"/>
			<field name="appears_on_payslip" eval="True"/>
			<field name="condition_select">none</field>
			<field name="amount_select">percentage</field>
			<field name="amount_percentage_base">round(categories.NET - categories.TIC - categories.RET)</field>
			<field name="amount_percentage">100.00</field>
		</record>
		
		<record id="salarbaza" model="hr.payroll.structure">
			<field name="code">BASE1</field>
			<field name="name">Salar baza</field>
			<field name="company_id" ref="base.main_company"/>
			<field eval="[(6,0,[ref('l10n_ro_hr_payroll.salarrealizat'),
			                    ref('l10n_ro_hr_payroll.concediuodihna'),
			                    ref('l10n_ro_hr_payroll.concediimedicale0'),
			                    ref('l10n_ro_hr_payroll.concediimedicale1'),
			                    ref('l10n_ro_hr_payroll.concediimedicale2'),
			                    ref('l10n_ro_hr_payroll.concediimedicale3'),
			                    ref('l10n_ro_hr_payroll.premii'),
			                    ref('l10n_ro_hr_payroll.deducerebaza'),
			                    ref('l10n_ro_hr_payroll.tichetedemasa'),
			                    ref('l10n_ro_hr_payroll.venit_brut'),			                    
			                    ref('l10n_ro_hr_payroll.somaj0'),
			                    ref('l10n_ro_hr_payroll.somaj1'),
			                    ref('l10n_ro_hr_payroll.somaj2'),
			                    ref('l10n_ro_hr_payroll.somaj_ang0'),
			                    ref('l10n_ro_hr_payroll.somaj_ang1'),
			                    ref('l10n_ro_hr_payroll.somaj_ang2'),
			                    ref('l10n_ro_hr_payroll.cass0'),
			                    ref('l10n_ro_hr_payroll.cass1'),
			                    ref('l10n_ro_hr_payroll.cass2'),
			                    ref('l10n_ro_hr_payroll.cass_ang0'),
			                    ref('l10n_ro_hr_payroll.cass_ang1'),
			                    ref('l10n_ro_hr_payroll.cass_ang2'),
			                    ref('l10n_ro_hr_payroll.cas0'),
			                    ref('l10n_ro_hr_payroll.cas1'),
			                    ref('l10n_ro_hr_payroll.cas2'),
			                    ref('l10n_ro_hr_payroll.cas3'),
			                    ref('l10n_ro_hr_payroll.cas_ang0'),
			                    ref('l10n_ro_hr_payroll.cas_ang1'),
			                    ref('l10n_ro_hr_payroll.cas_ang2'),
			                    ref('l10n_ro_hr_payroll.cas_ang3'),
			                    ref('l10n_ro_hr_payroll.fondconcediideboala0'),
			                    ref('l10n_ro_hr_payroll.fondconcediideboala1'),
			                    ref('l10n_ro_hr_payroll.fondconcediideboala2'),
			                    ref('l10n_ro_hr_payroll.fondconcediideboala3'),
			                    ref('l10n_ro_hr_payroll.fondriscaccidente0'),
			                    ref('l10n_ro_hr_payroll.fondriscaccidente1'),
			                    ref('l10n_ro_hr_payroll.fondriscaccidente2'),
			                    ref('l10n_ro_hr_payroll.fondriscaccidente3'),
			                    ref('l10n_ro_hr_payroll.fondgarantaresalarii0'),
			                    ref('l10n_ro_hr_payroll.fondgarantaresalarii1'),
			                    ref('l10n_ro_hr_payroll.fondgarantaresalarii2'),
			                    ref('l10n_ro_hr_payroll.contributiiangajat'),
			                    ref('l10n_ro_hr_payroll.contributiiangajator'),
			                    ref('l10n_ro_hr_payroll.bazacalculimpozit'),
			                    ref('l10n_ro_hr_payroll.impozit'),
			                    ref('l10n_ro_hr_payroll.retineri'),
			                    ref('l10n_ro_hr_payroll.salarnet'),
			                    ref('l10n_ro_hr_payroll.restplata')])]" name="rule_ids"/>
		</record>
	</data>
</openerp>
